# Example environment variables for local development.
# Copy this to .env and fill in real values (do NOT commit .env with secrets).

# DATABASE (Postgres example)
# Replace USER, PASSWORD and DB_NAME with your local values.
DATABASE_URL="postgresql://USER:PASSWORD@localhost:5432/DB_NAME"

# Quick SQLite fallback (uncomment to use; make sure to update schema.prisma datasource if switching)
# DATABASE_URL="file:./dev.db"

# NextAuth
NEXTAUTH_URL="http://localhost:3000"
NEXTAUTH_SECRET="change_this_for_development"

# AI keys (set only if you have them)
GEMINI_API_KEY="your-gemini-api-key"
OPENAI_API_KEY="your-openai-api-key"

# Optional third-party placeholders
AWS_ACCESS_KEY_ID="your-aws-access-key"
AWS_SECRET_ACCESS_KEY="your-aws-secret-key"
SENDGRID_API_KEY="your-sendgrid-api-key"

# Notes:
# 1) After editing .env, restart dev server:
#     pnpm run dev
# 2) If you set up/changed DATABASE_URL, run Prisma:
#     npx prisma migrate dev --name init
#    or
#     npx prisma db push
# 3) To create a local Postgres user/db (example):
#     sudo -u postgres psql -c "CREATE USER ignou_user WITH PASSWORD 'securepassword';"
#     sudo -u postgres psql -c "CREATE DATABASE edutrack_pro OWNER ignou_user;"
#     sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE edutrack_pro TO ignou_user;"
#    Then set DATABASE_URL="postgresql://ignou_user:securepassword@localhost:5432/edutrack_pro"
